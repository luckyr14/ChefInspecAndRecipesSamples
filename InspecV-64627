Check Text ( C-65369r1_chk )(OH12-1X-000194)
1. Open $DOMAIN_HOME/config/fmwconfig/components/OHS//httpd.conf with an editor.

2. Search for the "" directive within the OHS server configuration scope.

3. If the "Order" directive within the "" directive is omitted or is set improperly, this is a finding.




domain_components = attribute('domain_components',
default: {"base_domain": [ "ohs1" ]},
description: 'An identification for the user')

domains_home = attribute('domains_home',
default: "C:\\Oracle\\Middleware\\Oracle_Home\\user_projects\\domains",
description: 'Path of domains')

stig_control "OH12-1X-000194" do
domain_components.each do |domain_name, components|
domain_ohs_path = "#{domian_home}\\#{domain_name}\\config\\fmwconfig\\components\\OHS"
components ||= []
components.each do |compName|
file_path = "#{domain_ohs_path}\\#{compName}\\httpd.conf"
conf = conf_reader(file_path)
([file_path] + conf.conf_file_paths).each do |cfile_path|
describe file(cfile_path) do
its('content') {should match /Order deny,allow/}
end
end
end
end
end


=================

describe apache do
its ('user') { should cmp 'www-data' }
end

file_path = "/etc/apache2/apache2.conf"
describe apache_conf(file_path) do
  its('Order') {should cmp 'deny,allow'}
end

=====================

file_path = "/etc/apache2/apache2.conf"
describe file(file_path) do
  its('content') {should match 'AllowOverride[\\s]None\b'}
end



=====================



file_path = "/etc/apache2/apache2.conf"
describe file(file_path) do
    its ('content') { is_expected.to include 'AllowOverride None' }
end

=======================================

file_path = "/etc/apache2/apache2.conf"
describe file(file_path) do
 its('content') { should match (%r{AllowOverride\s.*?None}) }
end

===========================


domain_components = attribute('domain_components',
default: {"base_domain": [ "ohs1" ]},
description: 'An identification for the user')

domains_home = attribute('domains_home',
default: "C:\\Oracle\\Middleware\\Oracle_Home\\user_projects\\domains",
description: 'Path of domains')

stig_control "OH12-1X-000194" do

domain_components.each do |domain, components|
components.each do |component|
httpd_path = "#{domains_home}/#{domain}/config/fmwconfig/components/OHS/#{component}/httpd.conf"

conf = conf_reader(httpd_path)
file_positions = conf.search_files('Directory','/')

file_positions.each do |httpd_path, positions|

describe httpd_path do
subject do
parse_config(file(httpd_path).content.lines[positions[0]..positions[1]].join,
{assignment_regex: /^\s*(.*?)\s+(.*?)\s*$/})
end

its('Order') { should match 'deny(\s*),(\s*)allow'}


end
end
end
end
end
